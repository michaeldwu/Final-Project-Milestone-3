ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_point() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
themes_classic()
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_point() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
iran_covidata <- covidata %>%
filter(country_region == "Iran")
ggplot(iran_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Iran Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
library(janitor)
library(gt)
library(readr)
library(readxl)
library(rvest)
library(ggthemes)
# Loading the untidy version of the coronavirus data forked from the Johns Hopkins' GitHub repo
# Specifying column types to avoid any forms of errors
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
# This read_excel output is giving me some weird output of "new names: * `` -> ...1" and I am unsure of how to fix it
# UPDATE: was able to fix it with help from the following rstudio community post
# https://community.rstudio.com/t/how-to-make-read-excel-stops-messaging-when-using-col-names-false/30495/4
# Loaded from Zhong Tron's Kaggle page, scraped originally from the WHO
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', .name_repair = "minimal") %>%
clean_names()
# Tidying the untidy_covidata tibble using pivot_longer
# Pivoting so that dates will now be row data entries instead of columns as they were originally
covidata <- untidy_covidata %>%
pivot_longer(
cols = starts_with("x"),
names_to = "date",
names_prefix = "x",
values_to = "cases",
values_drop_na = TRUE
)
# Creating a gt() plot of the untidy_covidata just for reference
# Including two important footnotes for this table
# Only want to select a few columns that represent dates just to give the viewers a taste of the data
untidy_covidata %>%
slice(1:5) %>%
select(province_state, country_region, lat, long, x1_22_20, x1_23_20, x1_24_20, x1_25_20, x2_27_20) %>%
gt() %>%
tab_header(
title = "Glimpse of Untidy Covid-19 Data"
) %>%
cols_label(
province_state = "Province/State",
country_region = "Country",
lat = "Latitude",
long = "Longitude"
) %>%
cols_align(
align = "center"
) %>%
tab_footnote(
footnote = "Source: Johns Hopkins University, Ryan Lau on Github",
locations = cells_title(
groups = "title"
)
) %>%
tab_footnote(
footnote = "First five rows displayed only",
locations = cells_title(
groups = "title"
)
)
# Creating a gt() plot of the tidied covidata variable
# Nothing too groundbreaking with the code here, just a standard gt() tibble
covidata %>%
slice(1:5)%>%
gt() %>%
tab_header(
title = "Glimpse of Tidied Covid-19 Data"
) %>%
cols_label(
province_state = "Province/State",
country_region = "Country",
lat = "Latitude",
long = "Longitude",
date = "Date",
cases = "Number of Cases"
) %>%
cols_align(
align = "center"
) %>%
tab_footnote(
footnote = "Source: Johns Hopkins University, Ryan Lau on Github",
locations = cells_title(
groups = "title"
)
) %>%
tab_footnote(
footnote = "First five rows displayed only",
locations = cells_title(
groups = "title"
)
)
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
iran_covidata <- covidata %>%
filter(country_region == "Iran")
ggplot(iran_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Iran Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
# Creating a gt() plot of the tidied covidata variable
# Nothing too groundbreaking with the code here, just a standard gt() tibble
covidata %>%
slice(1:5)%>%
gt() %>%
tab_header(
title = "Glimpse of Tidied Covid-19 Data"
) %>%
cols_label(
province_state = "Province/State",
country_region = "Country",
lat = "Latitude",
long = "Longitude",
date = "Date",
cases = "Number of Cases"
) %>%
cols_align(
align = "center"
) %>%
tab_footnote(
footnote = "Source: Johns Hopkins University, Ryan Lau on Github",
locations = cells_title(
groups = "title"
)
) %>%
tab_footnote(
footnote = "First five rows displayed only",
locations = cells_title(
groups = "title"
)
)
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
view(covidata)
sk_covidata
covidata %>%
filter(country_region == "South Korea")
covidata %>%
group_by(country_region)
covidata %>%
group_by(country_region) %>% count(country_region)
x <- covidata %>%
+     group_by(country_region) %>% count(country_region)
x <- covidata %>% group_by(country_region) %>% count(country_region)
view(x)
sk_covidata <- covidata %>%
filter(country_region == "Korea, South")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
sk_covidata <- covidata %>%
filter(country_region == "Korea, South")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
iran_covidata <- covidata %>%
filter(country_region == "Iran")
ggplot(iran_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Iran Covid-19 Cases",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
iran_covidata <- covidata %>%
filter(country_region == "Italy")
ggplot(iran_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Italy Covid-19 Cases",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
filtered_covidata <- covidata %>%
filter(country_region %in% c("Italy", "Korea, South", "US", "China", "Spain", "France"))
ggplot(filtered_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = country_region)) +
geom_line() +
labs(title = "Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
y <- covidata %>% filter(country_region == "China")
view(y)
iran_covidata <- covidata %>%
filter(country_region == "China")
ggplot(iran_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Italy Covid-19 Cases",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
iran_covidata <- covidata %>%
filter(country_region == "Italy")
ggplot(iran_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Italy Covid-19 Cases",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
filtered_covidata <- covidata %>%
filter(country_region %in% c("Italy", "Korea, South", "US", "Spain", "France"))
ggplot(filtered_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = country_region)) +
geom_line() +
labs(title = "Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
y <- covidata %>% filter(country_region == "France")
view(y)
y <- covidata %>% filter(country_region == "Italy")
view(y)
filtered_covidata <- covidata %>%
filter(country_region %in% c("Italy", "Korea, South", "US", "Spain", "France", "China")) %>%
filter(province_state == NA | province_state == "France" | province_state == "China" | province_state == "US")
ggplot(filtered_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = country_region)) +
geom_line() +
labs(title = "Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
filtered_covidata <- covidata %>%
filter(country_region %in% c("Italy", "Korea, South", "US", "Spain", "France", "China")) %>%
filter(is.na(province_state) | province_state == "France" | province_state == "China" | province_state == "US")
ggplot(filtered_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = country_region)) +
geom_line() +
labs(title = "Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
y <- covidata %>% filter(country_region == "US")
view(y)
filtered_covidata <- covidata %>%
filter(country_region %in% c("Italy", "Korea, South", "US", "Spain", "France", "China", "Germany")) %>%
filter(is.na(province_state) | province_state == "France" | province_state == "China" | province_state == "US")
ggplot(filtered_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = country_region)) +
geom_line() +
labs(title = "Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
filtered_covidata <- covidata %>%
filter(country_region %in% c("Italy", "Korea, South", "US", "Spain", "France", "China", "Germany", "Iran")) %>%
filter(is.na(province_state) | province_state == "France" | province_state == "China" | province_state == "US")
ggplot(filtered_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = country_region)) +
geom_line() +
labs(title = "Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
filtered_covidata <- covidata %>%
filter(country_region %in% c("Italy", "Korea, South", "US", "Spain", "France", "China", "Germany", "Iran")) %>%
filter(is.na(province_state) | province_state == "France" | province_state == "China" | province_state == "US")
ggplot(filtered_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = country_region)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
sk_covidata <- covidata %>%
filter(country_region == "Korea, South")
sk_plot <- ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
iran_covidata <- covidata %>%
filter(country_region == "Iran")
iran_plot <- ggplot(iran_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Iran Covid-19 Cases",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
italy_covidata <- covidata %>%
filter(country_region == "Italy")
italy_plot <- ggplot(italy_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Italy Covid-19 Cases",
subtitle = "As of March 20th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
filtered_covidata <- covidata %>%
filter(country_region %in% c("Italy", "Korea, South", "US", "Spain", "France", "China", "Germany", "Iran")) %>%
filter(is.na(province_state) | province_state == "France" | province_state == "China" | province_state == "US")
ggplot(filtered_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = country_region)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, Excluding China and the United States",
x = "Case Count",
y = "Date") +
theme_classic()
covidata %>%
filter(country_region == "US") %>%
group_by(province_state) %>%
count(cases)
covidata %>%
filter(country_region == "US") %>%
group_by(province_state, date) %>%
count(cases)
US_covidata <- covidata %>%
filter(country_region == "US")
ggplot(US_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, Excluding China and the United States",
x = "Case Count",
y = "Date") +
theme_classic()
covidata %>%
filter(country_region == "US") %>%
group_by(province_state, date)
covidata %>%
filter(country_region == "US") %>%
group_by(province_state, date) %>%
arrange(desc(cases))
covidata %>%
filter(country_region == "US") %>%
group_by(province_state, date) %>%
arrange(desc(cases)) %>%
count(province_state)
covidata %>%
filter(country_region == "US") %>%
group_by(province_state, date) %>%
arrange(desc(cases)) %>%
select(province_state, cases)
covidata %>%
filter(country_region == "US") %>%
arrange(desc(cases)) %>%
select(province_state, cases)
covidata %>%
filter(country_region == "US") %>%
arrange(desc(cases)) %>%
select(province_state, cases) %>%
count(province_state)
covidata %>%
filter(country_region == "US") %>%
arrange(desc(cases)) %>%
select(province_state, cases)
# Find the most affected states
US_covidata <- covidata %>%
filter(country_region == "US") %>%
filter(province_state %>% c("New York", "Washington", "California", "New Jersey"))
# Find the most affected states
US_covidata <- covidata %>%
filter(country_region == "US") %>%
filter(province_state %in% c("New York", "Washington", "California", "New Jersey"))
ggplot(US_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, Excluding China and the United States",
x = "Case Count",
y = "Date") +
theme_classic()
# Find the most affected states
US_covidata <- covidata %>%
filter(country_region == "US") %>%
filter(province_state %in% c("New York", "Washington", "California", "New Jersey"))
ggplot(US_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, Excluding China and the United States",
x = "Date",
y = "Case Count") +
theme_classic()
covidata %>%
filter(country_region == "China") %>%
arrange(desc(cases))
# Find the most affected states
China_covidata <- covidata %>%
filter(country_region == "China") %>%
filter(province_state %in% c("Hubei", "Guangdong", "Henan", "Zhejiang"))
ggplot(China_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, Excluding China and the United States",
x = "Date",
y = "Case Count") +
theme_classic()
# Find the most affected states
China_covidata <- covidata %>%
filter(country_region == "China") %>%
filter(province_state %in% c("Hubei", "Guangdong", "Henan", "Zhejiang"))
ggplot(China_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases of the Most Affected Countries",
subtitle = "As of March 20th, Excluding China and the United States",
x = "Date",
y = "Case Count") +
theme_classic() +
scale_y_continuous(trans='log10')
# Find the most affected states
US_covidata <- covidata %>%
filter(country_region == "US") %>%
filter(province_state %in% c("New York", "Washington", "California", "New Jersey"))
ggplot(US_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases in China's 4 Most Affected Provinces",
subtitle = "As of March 20th, In Log Scale",
x = "Date",
y = "Case Count") +
theme_classic() +
scale_y_continuous(trans='log10')
# Find the most affected states
US_covidata <- covidata %>%
filter(country_region == "US") %>%
filter(province_state %in% c("New York", "Washington", "California", "New Jersey"))
ggplot(US_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases in China's 4 Most Affected Provinces",
subtitle = "As of March 20th, In Log Scale",
x = "Date",
y = "Case Count") +
theme_classic()
# Find the most affected states
China_covidata <- covidata %>%
filter(country_region == "China") %>%
filter(province_state %in% c("Hubei", "Guangdong", "Henan", "Zhejiang"))
ggplot(China_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases in China's 4 Most Affected Provinces",
subtitle = "In Log Scale",
x = "Date",
y = "Case Count") +
theme_classic() +
scale_y_continuous(trans='log10')
# Find the most affected states in the United States
US_covidata <- covidata %>%
filter(country_region == "US") %>%
filter(province_state %in% c("New York", "Washington", "California", "New Jersey"))
ggplot(US_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases, color = province_state)) +
geom_line() +
labs(title = "Confirmed Covid-19 Cases in China's 4 Most Affected Provinces",
subtitle = "As of March 20th, In Log Scale",
x = "Date",
y = "Case Count") +
theme_classic()
