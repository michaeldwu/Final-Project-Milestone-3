knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
library(janitor)
library(gt)
library(readr)
library(rvest)
covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv') %>%
clean_names()
covidata
view(covidata)
covidata <- covidata %>%
pivot_longer(
cols = starts_with("x"),
names_to = "date",
names_prefix = "x",
values_to = "location",
values_drop_na = TRUE
)
covidata
view(covidata)
covidata <- covidata %>%
pivot_longer(
cols = starts_with("x"),
names_to = "date",
names_prefix = "x",
values_to = "cases",
values_drop_na = TRUE
)
covidata <- covidata %>%
pivot_longer(
cols = starts_with("x"),
names_to = "date",
names_prefix = "x",
values_to = "cases",
values_drop_na = TRUE
)
covidata <- covidata %>%
pivot_longer(
cols = starts_with("x"),
names_to = "date",
names_prefix = "x",
values_to = "cases",
values_drop_na = TRUE
)
covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv') %>%
clean_names()
covidata <- covidata %>%
pivot_longer(
cols = starts_with("x"),
names_to = "date",
names_prefix = "x",
values_to = "cases",
values_drop_na = TRUE
)
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv') %>%
clean_names()
covidata <- untidy_covidata %>%
pivot_longer(
cols = starts_with("x"),
names_to = "date",
names_prefix = "x",
values_to = "cases",
values_drop_na = TRUE
)
view(covidata)
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv') %>%
clean_names()
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
library(janitor)
library(gt)
library(readr)
library(readxl)
library(rvest)
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_xlsx('sars-rawdata/sars_final.xlsx') %>%
clean_names()
sarsdata
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx') %>%
clean_names()
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', col_types = c("date", "double")
) %>%
clean_names()
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', col_types = c("date", "numeric")
) %>%
clean_names()
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx'
) %>%
clean_names()
sarsdata
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', col_types = c("double", "date", "double", "double", "character")
) %>%
clean_names()
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', col_types = c("numeric", "date", "numeric", "numeric", "chr")
) %>%
clean_names()
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', col_types = c("numeric", "date", "numeric", "numeric", "char")
) %>%
clean_names()
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', col_types = c("numeric", "date", "numeric", "numeric", "text")
) %>%
clean_names()
sarsdata
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', col_types = c("numeric", "date", "numeric", "numeric", "text")
) %>%
clean_names()
# Loading the untidy version of the coronavirus data forked from the Johns Hopkins' GitHub repo
# Specifying column types to avoid any forms of errors
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
# This read_excel output is giving me some weird output of "new names: * `` -> ...1" and I am unsure of how to fix it
# Loaded from Zhong Tron's Kaggle page, scraped originally from the WHO
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', .name_repair = "minimal") %>%
clean_names()
covidata
covidata %>%
filter(province_state == "South Korea")
view(covidata)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
library(janitor)
library(gt)
library(readr)
library(readxl)
library(rvest)
covidata %>%
filter(province_state == "South Korea")
# Loading the untidy version of the coronavirus data forked from the Johns Hopkins' GitHub repo
# Specifying column types to avoid any forms of errors
untidy_covidata <- read_csv('JH-covid19-rawdata/time_series_19-covid-Confirmed.csv', col_types = cols(
.default = col_double(),
`Province/State` = col_character(),
`Country/Region` = col_character()
)
) %>%
clean_names()
# This read_excel output is giving me some weird output of "new names: * `` -> ...1" and I am unsure of how to fix it
# UPDATE: was able to fix it with help from the following rstudio community post
# https://community.rstudio.com/t/how-to-make-read-excel-stops-messaging-when-using-col-names-false/30495/4
# Loaded from Zhong Tron's Kaggle page, scraped originally from the WHO
sarsdata <- read_excel(path = 'sars-rawdata/sars_final.xlsx', .name_repair = "minimal") %>%
clean_names()
# Tidying the untidy_covidata tibble using pivot_longer
# Pivoting so that dates will now be row data entries instead of columns as they were originally
covidata <- untidy_covidata %>%
pivot_longer(
cols = starts_with("x"),
names_to = "date",
names_prefix = "x",
values_to = "cases",
values_drop_na = TRUE
)
# Creating a gt() plot of the untidy_covidata just for reference
# Including two important footnotes for this table
# Only want to select a few columns that represent dates just to give the viewers a taste of the data
untidy_covidata %>%
slice(1:5) %>%
select(province_state, country_region, lat, long, x1_22_20, x1_23_20, x1_24_20, x1_25_20, x2_27_20) %>%
gt() %>%
tab_header(
title = "Glimpse of Untidy Covid-19 Data"
) %>%
cols_label(
province_state = "Province/State",
country_region = "Country",
lat = "Latitude",
long = "Longitude"
) %>%
cols_align(
align = "center"
) %>%
tab_footnote(
footnote = "Source: Johns Hopkins University, Ryan Lau on Github",
locations = cells_title(
groups = "title"
)
) %>%
tab_footnote(
footnote = "First five rows displayed only",
locations = cells_title(
groups = "title"
)
)
# Creating a gt() plot of the tidied covidata variable
# Nothing too groundbreaking with the code here, just a standard gt() tibble
covidata %>%
slice(1:5)%>%
gt() %>%
tab_header(
title = "Glimpse of Tidied Covid-19 Data"
) %>%
cols_label(
province_state = "Province/State",
country_region = "Country",
lat = "Latitude",
long = "Longitude",
date = "Date",
cases = "Number of Cases"
) %>%
cols_align(
align = "center"
) %>%
tab_footnote(
footnote = "Source: Johns Hopkins University, Ryan Lau on Github",
locations = cells_title(
groups = "title"
)
) %>%
tab_footnote(
footnote = "First five rows displayed only",
locations = cells_title(
groups = "title"
)
)
covidata %>%
filter(province_state == "South Korea")
view(covidata)
covidata %>%
filter(country_region == "South Korea")
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date$date,"%d/%m/%y"), y = cases)) +
geom_point()
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%d/%m/%y"), y = cases)) +
geom_point()
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%d_%m_%y"), y = cases)) +
geom_point()
view(sk_covidata)
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(reprex)
library(janitor)
library(gt)
library(readr)
library(readxl)
library(rvest)
library(ggthemes)
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_point() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
themes_classic()
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_point() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
sk_covidata <- covidata %>%
filter(country_region == "South Korea")
ggplot(sk_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "South Korea Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
iran_covidata <- covidata %>%
filter(country_region == "Iran")
ggplot(iran_covidata, aes(x = as.Date(date,"%m_%d_%y"), y = cases)) +
geom_line() +
labs(title = "Iran Covid-19 Cases",
subtitle = "As of March 5th, 2020",
x = "Case Count",
y = "Date") +
theme_classic()
